{"version":3,"sources":["components/ReactionSummary.js","api/UserAPI.js","components/Reaction.js","api/ReactionAPI.js","App.js","reportWebVitals.js","index.js"],"names":["ReactionSummary","props","useState","users","setUsers","activeTabReactionDetails","setActiveTabReactionDetails","useEffect","axios","get","then","res","data","activeTab","userReactions","filter","userReaction","reaction_id","ReactionSummaryTab","className","onClick","onTabChange","reactedCounts","map","reactedCount","count","id","emoji","ReactionSummaryDetails","_uCReaction","index","user","find","user_id","reaction","reactions","_reaction","src","avatar","alt","last_name","first_name","style","Reaction","setReactions","setReactedCounts","showReactionEmojis","setShowReactionEmojis","setUserReactions","showReactionSummary","setShowReactionSummary","activeSummaryTab","setActiveSummaryTab","curUserReactions","setCurUserReactions","params","Promise","all","content_id","contentId","_rs","_cRnList","_reactions","_cReactions","_cRnListById","_cRn","length","isUserReacted","contentReaction","userId","onSelectReaction","selectedReaction","_uContentReactionId","user_reaction_idx","findIndex","delete","updateReactedCounts","splice","userReactedData","post","push","reactedCountData","ReactionEmojis","name","backgroundColor","place","type","effect","ReactionEmojiTriggerBtn","ReactedCounts","onMouseOver","state","toggleReactionSummary","onMouseLeave","onMouseMove","App","window","location","href","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d20676e8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getUsers } from \"../api/UserAPI\";\n\nimport \"./ReactionSummary.scss\";\n\nfunction ReactionSummary(props) {\n  const [users, setUsers] = useState([]);\n  const [activeTabReactionDetails, setActiveTabReactionDetails] = useState([]);\n\n  // Fetch users on init\n  useEffect(() => {\n    getUsers().then((res) => {\n      setUsers(res.data);\n    });\n  }, []);\n\n  // Set active tab's reactions summary details\n  useEffect(() => {\n    setActiveTabReactionDetails(\n      props.activeTab === \"all\"\n        ? props.userReactions\n        : [\n            ...props.userReactions.filter(\n              (userReaction) => userReaction.reaction_id === props.activeTab\n            ),\n          ]\n    );\n  }, [props.activeTab, props.userReactions]);\n\n  const ReactionSummaryTab = () => {\n    return (\n      <ul className=\"ReactionSummaryTab\">\n        <li\n          key=\"all\"\n          className={`ReactionSummaryTab-item ${\n            props.activeTab === \"all\" ? \"active\" : \"\"\n          }`}\n          onClick={() => props.onTabChange(\"all\")}\n        >\n          <span>All</span>\n        </li>\n        {props.reactedCounts.map((reactedCount) => {\n          return (\n            reactedCount.count >= 1 && (\n              <li\n                key={reactedCount.id}\n                className={`ReactionSummaryTab-item ${\n                  props.activeTab === reactedCount.id ? \"active\" : \"\"\n                }`}\n                onClick={() => props.onTabChange(reactedCount.id)}\n              >\n                <span>{reactedCount.emoji}</span>\n                <span>&middot;</span>\n                <span>{reactedCount.count}</span>\n              </li>\n            )\n          );\n        })}\n      </ul>\n    );\n  };\n\n  const ReactionSummaryDetails = () => {\n    return (\n      <div className=\"ReactionSummaryDetails\">\n        {activeTabReactionDetails.map((_uCReaction, index) => {\n          const user = users.find((user) => user.id === _uCReaction.user_id);\n          const reaction = props.reactions.find(\n            (_reaction) => _reaction.id === _uCReaction.reaction_id\n          );\n          return (\n            <div className=\"ReactionSummaryDetails-item\" key={index}>\n              <img src={user.avatar} className=\"user-avatar\" alt=\"avatar\" />\n              <span className=\"user-reacted-emoji\">\n                {reaction ? reaction.emoji : \"\"}\n              </span>\n              <span className=\"user-name\">\n                {user ? user.last_name + \" \" + user.first_name : \"\"}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div style={props.style} className=\"ReactionSummary\">\n      <div className=\"ReactionSummary-title\">Reactions</div>\n      <ReactionSummaryTab />\n      <ReactionSummaryDetails />\n    </div>\n  );\n}\n\nexport default ReactionSummary;\n","import axios from \"axios\";\n\nfunction getUsers() {\n  return axios.get(\"https://artful-iudex.herokuapp.com/users\");\n}\n\nexport { getUsers };\n","import { useEffect, useState } from \"react\";\nimport \"./Reaction.scss\";\nimport {\n  getReactions,\n  getUserContentReactions,\n  addUserContentReaction,\n  deleteUserContentReaction,\n} from \"../api/ReactionAPI\";\nimport ReactionSummary from \"./ReactionSummary\";\nimport ReactTooltip from \"react-tooltip\";\n\nfunction Reaction(props) {\n  const [reactions, setReactions] = useState([]);\n  const [reactedCounts, setReactedCounts] = useState([]);\n  const [showReactionEmojis, setShowReactionEmojis] = useState(false);\n  const [userReactions, setUserReactions] = useState([]);\n  const [showReactionSummary, setShowReactionSummary] = useState(false);\n  const [activeSummaryTab, setActiveSummaryTab] = useState();\n  const [curUserReactions, setCurUserReactions] = useState([]);\n\n  // Fetch Reactions, User Content Reactions on init\n  // Aggregate user reacted counts by reaction\n  useEffect(() => {\n    function getReactedCountsById(_rs, _cRnList) {\n      return _rs.map((_reaction) => {\n        const _cRnListById = _cRnList.filter(\n          (_cRn) => _cRn.reaction_id === _reaction.id\n        );\n        return {\n          ..._reaction,\n          count: _cRnListById.length,\n          isUserReacted: !!_cRnListById.find(\n            (contentReaction) => contentReaction.user_id === props.userId\n          ),\n        };\n      });\n    }\n\n    Promise.all([\n      getReactions(),\n      getUserContentReactions({ content_id: props.contentId }),\n    ]).then(([_reactions, _cReactions]) => {\n      setReactions(_reactions.data);\n      setUserReactions(_cReactions.data);\n      setReactedCounts(getReactedCountsById(_reactions.data, _cReactions.data));\n    });\n  }, [props.userId, props.contentId]);\n\n  // Update active user content reactions state\n  useEffect(() => {\n    setCurUserReactions(\n      userReactions.filter(\n        (userReaction) => userReaction.user_id === props.userId\n      )\n    );\n  }, [props.userId, userReactions]);\n\n  // Method called when click at a reaction emoji\n  const onSelectReaction = (selectedReaction) => {\n    setShowReactionEmojis(false);\n    const user_reaction_idx = userReactions.findIndex(\n      (userReaction) =>\n        userReaction.reaction_id === selectedReaction.id &&\n        userReaction.user_id === props.userId\n    );\n    if (user_reaction_idx >= 0) {\n      // If user already reacted\n      deleteUserContentReaction(userReactions[user_reaction_idx].id).then(\n        () => {\n          updateReactedCounts(selectedReaction);\n          userReactions.splice(user_reaction_idx, 1);\n          setUserReactions([...userReactions]);\n        }\n      );\n    } else {\n      // If user just selected this emoji\n      const userReactedData = {\n        reaction_id: selectedReaction.id,\n        user_id: props.userId,\n        content_id: props.contentId,\n      };\n      addUserContentReaction(userReactedData).then((res) => {\n        updateReactedCounts(selectedReaction);\n        userReactions.push({ ...userReactedData, id: res.data.id });\n        setUserReactions([...userReactions]);\n      });\n    }\n  };\n\n  // Method to idenfify, is the user already reacted given reaction or not\n  function isUserReacted(reaction) {\n    return !!curUserReactions.find(\n      (userReaction) => userReaction.reaction_id === reaction.id\n    );\n  }\n\n  // Method to update reacted count details\n  function updateReactedCounts(reaction) {\n    let reactedCountData = reactedCounts.find(\n      (reactedCount) => reactedCount.id === reaction.id\n    );\n    if (reactedCountData) {\n      if (isUserReacted(reaction)) {\n        reactedCountData.count -= 1;\n        reactedCountData.isUserReacted = false;\n      } else {\n        reactedCountData.count += 1;\n        reactedCountData.isUserReacted = true;\n      }\n    } else {\n      reactedCounts.push({ ...reaction, count: 1, isUserReacted: true });\n    }\n    setReactedCounts([...reactedCounts]);\n  }\n\n  // Method to toggle reaction summary data\n  const toggleReactionSummary = (state, reaction) => {\n    setShowReactionSummary(state);\n    setActiveSummaryTab(reaction.id);\n  };\n\n  const ReactionEmojis = () => {\n    return (\n      <>\n        <ul className=\"ReactionEmojis\">\n          {reactions.map((reaction) => (\n            <li\n              className=\"ReactionEmojis-item\"\n              key={reaction.id}\n              data-for=\"trigger-emoji\"\n              data-tip={reaction.name}\n              data-offset=\"{'top': 5}\"\n            >\n              <button\n                className=\"ReactionEmojis-btn\"\n                onClick={() => onSelectReaction(reaction)}\n              >\n                <span className=\"emoji\">{reaction.emoji}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n        <ReactTooltip\n          id=\"trigger-emoji\"\n          className=\"EmojiTooltip\"\n          backgroundColor=\"#161616\"\n          place=\"top\"\n          type=\"dark\"\n          effect=\"solid\"\n        />\n      </>\n    );\n  };\n\n  const ReactionEmojiTriggerBtn = () => {\n    return (\n      <button\n        className=\"ReactionEmojiTriggerBtn\"\n        onClick={() => setShowReactionEmojis(!showReactionEmojis)}\n      >\n        <img\n          className=\"ReactionEmojiTriggerBtn-emoji\"\n          src=\"./emoji-add.svg\"\n          alt=\"emoji-add\"\n        />\n      </button>\n    );\n  };\n\n  const ReactedCounts = () => {\n    return (\n      <div className=\"ReactedCounts\">\n        {reactedCounts.map(\n          (reaction) =>\n            reaction.count >= 1 && (\n              <button\n                className={`ReactedCounts-btn ${\n                  reaction.isUserReacted ? \"active\" : \"\"\n                }`}\n                key={reaction.id}\n                onClick={() => onSelectReaction(reaction)}\n                onMouseOver={() => toggleReactionSummary(true, reaction)}\n                onMouseLeave={() => setShowReactionSummary(false)}\n                data-for=\"reaction-summary\"\n              >\n                <span>{reaction.emoji}</span>\n                <span>&middot;</span>\n                <span>{reaction.count}</span>\n              </button>\n            )\n        )}\n      </div>\n    );\n  };\n  return (\n    <div className=\"Reaction\">\n      <div className=\"Reaction-container\">\n        {showReactionEmojis && <ReactionEmojis />}\n        <div className=\"Reaction-trigger-count\">\n          <ReactionEmojiTriggerBtn />\n          <ReactedCounts />\n        </div>\n      </div>\n\n      <div\n        className={`Reaction-summary-container ${\n          showReactionSummary ? \"show\" : \"hide\"\n        }`}\n        onMouseMove={() => setShowReactionSummary(true)}\n        onMouseLeave={() => setShowReactionSummary(false)}\n      >\n        <ReactionSummary\n          reactions={reactions}\n          reactedCounts={reactedCounts}\n          userReactions={userReactions}\n          activeTab={activeSummaryTab}\n          onTabChange={setActiveSummaryTab}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Reaction;\n","import axios from \"axios\";\n\nfunction getReactions() {\n  return axios.get(\"https://artful-iudex.herokuapp.com/reactions\");\n}\n\nfunction getUserContentReactions(params) {\n  return axios.get(\n    \"https://artful-iudex.herokuapp.com/user_content_reactions\",\n    { params }\n  );\n}\n\nfunction addUserContentReaction(params) {\n  return axios.post(\n    \"https://artful-iudex.herokuapp.com/user_content_reactions\",\n    { params }\n  );\n}\n\nfunction deleteUserContentReaction(_uContentReactionId) {\n  return axios.delete(\n    `https://artful-iudex.herokuapp.com/user_content_reactions/${_uContentReactionId}`\n  );\n}\nexport {\n  getReactions,\n  getUserContentReactions,\n  addUserContentReaction,\n  deleteUserContentReaction,\n};\n","import \"./App.scss\";\nimport Reaction from \"./components/Reaction\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Content\">\n        <div className=\"Body\">\n          <img\n            src={window.location.href + \"logo192.png\"}\n            width=\"60\"\n            alt=\"logo\"\n          />\n          <div className=\"Body-content\">\n            <span>UserId: 10</span> <span>ContentId: 1</span>\n          </div>\n        </div>\n        <Reaction userId={10} contentId={1} />\n      </div>\n      <div className=\"Content\">\n        <div className=\"Body\">\n          <img\n            src={window.location.href + \"logo192.png\"}\n            width=\"60\"\n            alt=\"logo\"\n          />\n          <div className=\"Body-content\">\n            <span>UserId: 1</span> <span>ContentId: 2</span>\n          </div>\n        </div>\n        <Reaction userId={1} contentId={2} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}